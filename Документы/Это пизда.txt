var tour = db.Tours
	.Include(tour => tour.TourType)        // Загрузка связанного объекта TourType
	.Include(tour => tour.NutritionType)  // Загрузка связанного объекта NutritionType
	.Include(tour => tour.Hotel)          // Загрузка связанного объекта Hotel
	.ThenInclude(hotel => hotel.City)
	.ThenInclude(city => city.Country)
	.Include(tour => tour.Routes)
	.ThenInclude(route => route.TransportType)
	.Include(tour => tour.Routes)
	.ThenInclude(route => route.DepartmentDeparture)
	.ThenInclude(departmentDeparture => departmentDeparture.City)
	.ThenInclude(city => city.Country)
	.Include(tour => tour.Descriptions)   // Загрузка коллекции Descriptions
	.ThenInclude(description => description.Characteristic)
	.ThenInclude(characteristic => characteristic.CharacteristicType)
	.Select(tour => new TourDto()
	{
		Id = tour.Id,
		Name = tour.Name,
		//PhotoUrl = tour.Photo,
		MainDescription = tour.MainDescription,
		NutritionType = tour.NutritionType.Name,
		Direction = new DirectionDto() 
		{ 
			Country = tour.Hotel.City.Country.Name,
			City = tour.Hotel.City.Name,
			Hotel = tour.Hotel.Name,
			StarsNumber = tour.Hotel.StarsNumber,
		},
		Routes = tour.Routes.Select(route => new RouteDto()
		{
			Id = route.Id,
			LandingDateOfDeparture = route.LandingDateOfDeparture,
			LandingDateOfReturn = route.LandingDateOfReturn,
			LandingTimeOfDeparture = route.LandingTimeOfDeparture,
			LandingTimeOfReturn = route.LandingTimeOfReturn,
			ArrivalDateOfDeparture = route.ArrivalDateOfDeparture,
			ArrivalDateOfReturn = route.ArrivalDateOfReturn,
			ArrivalTimeOfDeparture = route.ArrivalTimeOfDeparture,
			ArrivalTimeOfReturn = route.ArrivalTimeOfReturn,
			Price = route.Price,
			SeatsNumber = route.SeatsNumber,
			TransportType = new TransportTypeDto()
			{ 
				Id = route.TransportType.Id,
				Name = route.TransportType.Name,
			},
			DepartmentDeparture = new DepartmentDepartureDto()
			{
				Id = route.DepartmentDeparture.Id,
				Name = route.DepartmentDeparture.Name,
				City = route.DepartmentDeparture.City.Name,
				Country = route.DepartmentDeparture.City.Country.Name,
			}
		}).ToList(),
		Descriptions = tour.Descriptions.Select(characteristicType => new CharacteristicTypeWithDescriptions()
		{
			Id = characteristicType.Characteristic.CharacteristicType.Id,
			Name = characteristicType.Characteristic.CharacteristicType.Name,
			Descriptions = tour.Descriptions.Where(description => description.Characteristic.CharacteristicTypeId == characteristicType.Characteristic.CharacteristicType.Id)
			.Select(description => new DescriptionWithCharacteriscDto() 
			{
				Characteristic = new CharacteristicDto() { Id =  description.Characteristic.Id, Name = description.Characteristic.Name},
				Description = new DescriptionDto() { Id =  description.Id, Value = description.Value}
			}).ToList()
		}).ToList(),
	}).FirstOrDefault(t => t.Id == id);